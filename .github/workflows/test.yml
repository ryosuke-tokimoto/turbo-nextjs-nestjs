name: Test

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]
  workflow_dispatch:

jobs:
  coverage:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: novliter_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.10.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          export NODE_ENV=development
          pnpm install --frozen-lockfile

      - name: Setup test environment
        run: |
          cd packages/server
          echo "DATABASE_URL=${{ vars.DATABASE_URL }}" >> .env.test
          echo "NODE_ENV=test" >> .env.test

      - name: Run client coverage
        run: pnpm --filter "@monorepo/client" test:coverage

      - name: Run server coverage
        run: pnpm --filter "@monorepo/server" test:coverage
        env:
          DATABASE_URL: ${{ vars.DATABASE_URL }}
          NODE_ENV: test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./packages/client/coverage/coverage-final.json,./packages/server/coverage/coverage-final.json
          flags: client,server
          verbose: true
